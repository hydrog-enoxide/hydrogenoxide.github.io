<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Openwrt使用USB设备作为根目录</title>
    <link href="/2021/12/04/Openwrt%E4%BD%BF%E7%94%A8USB%E8%AE%BE%E5%A4%87%E4%BD%9C%E4%B8%BA%E6%A0%B9%E7%9B%AE%E5%BD%95/"/>
    <url>/2021/12/04/Openwrt%E4%BD%BF%E7%94%A8USB%E8%AE%BE%E5%A4%87%E4%BD%9C%E4%B8%BA%E6%A0%B9%E7%9B%AE%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<p>如果你的刷好OP的路由器设备有至少一个USB口，那么可以使用U盘（或固态硬盘）来作为根目录（&#x2F;）启动，相较于原本区区32MB的闪存提高了可玩性。</p><h3 id="准备U盘"><a href="#准备U盘" class="headerlink" title="准备U盘"></a>准备U盘</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shel">#插入U盘，登录路由器终端。<br>fdisk -l<br>--------------------------------------------------------------<br>Disk /dev/sda: 14.65 GiB, 15728640000 bytes, 30720000 sectors<br>Disk model: Flash Disk      <br>Units: sectors of 1 * 512 = 512 bytes<br>Sector size (logical/physical): 512 bytes / 512 bytes<br>I/O size (minimum/optimal): 512 bytes / 512 bytes<br>Disklabel type: dos<br>Disk identifier: 0x4fe68bd8<br><br>Device     Boot Start      End  Sectors  Size Id Type<br>/dev/sda1  *     2048 30719999 30717952 14.6G 83 Linux<br>root@Newifi-D2:~# <br>---------------------------------------------------------------<br>#格式化分区<br>mkfs.ext4 /dev/sdxx<br></code></pre></td></tr></table></figure><h3 id="复制根目录-amp-设置开机挂载"><a href="#复制根目录-amp-设置开机挂载" class="headerlink" title="复制根目录&amp;设置开机挂载"></a>复制根目录&amp;设置开机挂载</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">将op系统文件复制到新分区</span><br>mkdir -p /tmp/introot<br>mkdir -p /tmp/extroot<br>mount --bind / /tmp/introot<br>mount /dev/sda1 /tmp/extroot<br>tar -C /tmp/introot -cvf - . | tar -C /tmp/extroot -xf -<br>umount /tmp/introot<br>umount /tmp/extroot<br></code></pre></td></tr></table></figure><p>复制完成后，登录web管理面板 系统&gt;挂载点&gt;添加&gt;选择U盘并作为根目录，保存并启用后重启。<br>也可以直接编辑&#x2F;etc&#x2F;config&#x2F;fstab文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">末尾添加</span><br>config mount<br>option uuid &#x27;xxxx-xxxx-xxxx-xxxx<br>option target &#x27;/&#x27;<br>option fstype &#x27;ext4&#x27;<br>option enabled &#x27;1&#x27;<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@Newifi-D2:~# df -h<br>Filesystem                Size      Used Available Use% Mounted on<br>/dev/root                17.0M     17.0M         0 100% /rom<br>tmpfs                   249.3M    808.0K    248.6M   0% /tmp<br>/dev/sda1                14.4G     87.6M     13.5G   1% /<br>tmpfs                   512.0K         0    512.0K   0% /dev<br>/dev/mtdblock6           12.3M    840.0K     11.4M   7% /mnt/mtdblock6<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>oenwrt</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ubuntu21.04-arm64更换国内软件源</title>
    <link href="/2021/08/08/Ubuntu21-04-arm64%E6%9B%B4%E6%8D%A2%E5%9B%BD%E5%86%85%E8%BD%AF%E4%BB%B6%E6%BA%90/"/>
    <url>/2021/08/08/Ubuntu21-04-arm64%E6%9B%B4%E6%8D%A2%E5%9B%BD%E5%86%85%E8%BD%AF%E4%BB%B6%E6%BA%90/</url>
    
    <content type="html"><![CDATA[<p>从开始使用linux开始，我已经换了十万甚至九万次源，这次的Ubuntu 21.04 “Hirsute”也不例外。<br>清华源没收录新版本，只能用中科大的源。</p><p><em>将全部的镜像域名替换为mirrors.ustc.edu.cn，再更新apt即可。</em></p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ubuntu</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在树莓派上模拟x86-64运行东方project正作</title>
    <link href="/2021/07/25/%E5%9C%A8%E6%A0%91%E8%8E%93%E6%B4%BE%E4%B8%8A%E6%A8%A1%E6%8B%9Fx86-64%E8%BF%90%E8%A1%8C%E4%B8%9C%E6%96%B9project%E6%AD%A3%E4%BD%9C/"/>
    <url>/2021/07/25/%E5%9C%A8%E6%A0%91%E8%8E%93%E6%B4%BE%E4%B8%8A%E6%A8%A1%E6%8B%9Fx86-64%E8%BF%90%E8%A1%8C%E4%B8%9C%E6%96%B9project%E6%AD%A3%E4%BD%9C/</url>
    
    <content type="html"><![CDATA[<p>上次在linux下运行了东方正作，现在博主手头只有树莓派，而以后免不了要拿出去用，这次来试一下在树莓派上模拟x86-64来运行wine，最后运行th。</p><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><ul><li>树莓派4B&#x2F;400一台</li><li>最好是（强烈建议为debian系）的linux发行版，必须为aarch64(arm64)。</li><li>模拟器<strong>exagear</strong></li></ul><h4 id="exagear"><a href="#exagear" class="headerlink" title="exagear"></a>exagear</h4><p>这是一款俄罗斯公司开发的在arm设备（以前主要是安卓手机&#x2F;平板）上模拟电脑游戏的模拟器，不过也有linux版本，近期听说被华为收购了，还收费（？）。不过博主还是弄到了整套的软件包。需要的可向博主索要。</p><h3 id="树莓派的环境配置"><a href="#树莓派的环境配置" class="headerlink" title="树莓派的环境配置"></a>树莓派的环境配置</h3><p>博主这里用的发行版事ubuntu21。</p><p>在做完一系列操作，终于安装好了系统后，首先要做的是换源以备安装，以清华源为例：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo nano /etc/apt/sources.list<br><span class="hljs-meta prompt_">#</span><span class="language-bash">替换掉原来的域名为mirrors.tuna.tsinghua.edu.cn/ubuntu/</span><br>ctrl+O保存文件<br>sudo apt update &amp;&amp; sudo apt upgrade<br></code></pre></td></tr></table></figure><p>接着安装exagear，将软件包上传到树莓派，然后</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo apt install *.deb<br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/WgRpQI"><img src="https://z3.ax1x.com/2021/07/25/WgRpQI.jpg" alt="WgRpQI.jpg"></a></p><p>如果没有问题，那么输入exagear应该就可以进入x86-64的环境了，这时我们测试一下：uname -a</p><p>duang~</p><p><a href="https://imgtu.com/i/WgW3ut"><img src="https://z3.ax1x.com/2021/07/25/WgW3ut.png" alt="WgW3ut.png"></a></p><h3 id="安装wine"><a href="#安装wine" class="headerlink" title="安装wine"></a>安装wine</h3><p>刚才，我们解决了ARM和x86-64的兼容性问题，那么接下来在linux运行exe的过程中，wine还是必不可少的。依照官方给出的步骤安装wine:（在exaagear环境内运行！！！）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">开启32位支持</span><br>sudo dpkg --add-architecture i386 <br><span class="hljs-meta prompt_">#</span><span class="language-bash">下载并添加密钥</span><br>wget -nc https://dl.winehq.org/wine-builds/winehq.key<br>sudo apt-key add winehq.key<br><span class="hljs-meta prompt_">#</span><span class="language-bash">添加软件源</span><br>sudo add-apt-repository &#x27;deb https://dl.winehq.org/wine-builds/ubuntu/ focal main <br>sudo apt update<br><span class="hljs-meta prompt_">#</span><span class="language-bash">安装稳定分支</span><br>sudo apt install --install-recommends winehq-stable<br></code></pre></td></tr></table></figure><p>接下来要跑很长一段时间，要是网络不好会更长，去喝杯红茶吧。</p><p>终于安装完毕，现在exagear环境就有了完整的x86-64的wine啦~</p><p>注意，exagear的环境内部与宿主环境的用户目录是相通的，将正作文件上传到用户目录，使用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">wine th*.exe<br></code></pre></td></tr></table></figure><p>来运行游戏<br><a href="https://imgtu.com/i/WghJfg"><img src="https://z3.ax1x.com/2021/07/25/WghJfg.png" alt="WghJfg.png"></a></p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
      <category>日记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>touhou</tag>
      
      <tag>树莓派</tag>
      
      <tag>ARM</tag>
      
      <tag>wine</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>树莓派（以及其他派）开机自动挂载硬盘 _</title>
    <link href="/2021/06/16/28/"/>
    <url>/2021/06/16/28/</url>
    
    <content type="html"><![CDATA[<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">sudo nano /etc/fstab<br>UUID=5997a299-01e8-4b7a-a962-aa4680cb824d   /home/alarm/data1    ext4    defaults,nofail,rw    0    0<br></code></pre></td></tr></table></figure><p>这样就可以做到开机自动挂载硬盘，而且有nofaill字段，不用担心没有硬盘无法启动了。</p>]]></content>
    
    
    <categories>
      
      <category>日记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>硬盘</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>用wine在Linux下运行东方stg游戏</title>
    <link href="/2021/06/13/23/"/>
    <url>/2021/06/13/23/</url>
    
    <content type="html"><![CDATA[<h2 id="在树莓派下也可以运行th系列，用wine就可以完成。首先，明白你的linux是什么发行版，比如ubuntu-arch-manjaro（其实也是arch系）。大多数发行版可以用包管理器完成。"><a href="#在树莓派下也可以运行th系列，用wine就可以完成。首先，明白你的linux是什么发行版，比如ubuntu-arch-manjaro（其实也是arch系）。大多数发行版可以用包管理器完成。" class="headerlink" title="在树莓派下也可以运行th系列，用wine就可以完成。首先，明白你的linux是什么发行版，比如ubuntu,arch,manjaro（其实也是arch系）。大多数发行版可以用包管理器完成。"></a>在树莓派下也可以运行th系列，用wine就可以完成。<br>首先，明白你的linux是什么发行版，比如ubuntu,arch,manjaro（其实也是arch系）。<br>大多数发行版可以用包管理器完成。<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs sh">ubuntu:<br><br>sudo apt install -y wine<br><br><span class="hljs-built_in">arch</span>/manjaro<br><br>sudo pacman -Sy wine<br><br>centos(少有用于桌面):<br><br>yum -y update &amp;&amp; yum -y install wine<br><br>如果你想体验最新版，可以去wine的官方网站，那里有详细的安装说明。<br>（玩个车万需要最新版吗）<br></code></pre></td></tr></table></figure></h2><p>风神录成功运行<br><a href="https://imgtu.com/i/27lwqA"><img src="https://z3.ax1x.com/2021/06/14/27lwqA.png" alt="th10"></a><br><a href="https://imgtu.com/i/27laKH"><img src="https://z3.ax1x.com/2021/06/14/27laKH.png" alt="sh"></a><br><a href="https://imgtu.com/i/27ldrd"><img src="https://z3.ax1x.com/2021/06/14/27ldrd.png" alt="th10"></a></p>]]></content>
    
    
    <categories>
      
      <category>日记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>th</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Range AMP attack研究：反向的DDos</title>
    <link href="/2021/06/05/17/"/>
    <url>/2021/06/05/17/</url>
    
    <content type="html"><![CDATA[<p>起初，是我在无意间看到了这样一篇文章：<a href="https://blog.csdn.net/fnmsd/article/details/107580958">RangeAMP：利用CDN+Range请求进行的HTTP放大攻击</a><br>当时我是很感兴趣的，因为我之前听说过UDP反射（DNS AMP NTP AMP LDAP AML等），以及很鸡肋的 wordpress pingback反射攻击。利用CDN的放大我还是第一次听到，但受限于当时技术有限，无法自己写程序实现它，github上甚至都没有利用工具或者示例代码。不过经过一段时间的学习，我还是完美复现了它。<br><strong>以下是原理+实现代码（部分）+效果实测</strong> </p><h2 id="仅仅是学习用途！"><a href="#仅仅是学习用途！" class="headerlink" title="仅仅是学习用途！"></a>仅仅是学习用途！</h2><p>如果觉得博主的文章太屑，可以看论文原文。<br><a href="https://netsec.ccert.edu.cn/files/papers/cdn-backfire-dsn2020.pdf">https://netsec.ccert.edu.cn/files/papers/cdn-backfire-dsn2020.pdf</a></p><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>我们都知道CDN技术</p><blockquote><p>CDN的全称是Content Delivery Network，即内容分发网络。CDN是构建在现有网络基础之上的智能虚拟网络，依靠部署在各地的边缘服务器，通过中心平台的负载均衡、内容分发、调度等功能模块，使用户就近获取所需内容，降低网络拥塞，提高用户访问响应速度和命中率。（来自百度百科）</p></blockquote><p>而对于CDN，我们可以用一些方法，使得CDN绕过缓存，读取源站。</p><p>接下来引入一个重要概念：Range范围请求</p><p><img src="https://z3.ax1x.com/2021/06/05/2N6wrQ.png" alt="HTTP范围请求"></p><p>使用Range请求时，需要在HTTP请求头中加入Range头：</p><p><img src="https://z3.ax1x.com/2021/06/05/2N6bRK.png" alt="请求头"></p><p>带上请求头请求后，会返回一个206状态码，同时头部包含我们要的数据：</p><p><img src="https://z3.ax1x.com/2021/06/05/2NcAsg.png" alt="头"></p><p><img src="https://z3.ax1x.com/2021/06/05/2NcELQ.png" alt="数据"></p><p>那么我了解到，不同的CDN在面对请求的时候，会有以下不同的表现：</p><blockquote><p>懒惰型： 不做任何改变，直接转发带Range头的请求<br>删除型： 直接删除Range头再转发<br>扩展型： 将Range头扩展到一个比较大范围</p><p>其中删除型及扩展型是CDN缓存为了增加缓存命中率而做的优化，对于Range请求的资源（文件）尽量的多请求，以便客户端向CDN请求后续分块时无需再向源站请求数据。</p></blockquote><p><strong>这种放大思路，就是利用后两种方法，请求尽量巨大的文件，而返回攻击端的依然是小内容。</strong></p><blockquote><p>放大倍数约等于所访问的文件大小&#x2F;Range请求+响应包大小</p></blockquote><p>这就很棒了嘛</p><h3 id="博主的实现代码"><a href="#博主的实现代码" class="headerlink" title="博主的实现代码"></a>博主的实现代码</h3><p>不提供完整脚本及关键代码，以防<em>别有用心</em>的人做坏事。</p><p>首先，我们使用的模块：</p><ul><li>random - 用于请求</li><li>threading - 多线程增加威力</li><li>time，os等一些可能会用到的库</li></ul><p>对于CDN，我们要绕过它的一个最有效的办法就是随机url。<br>博主是这样写的：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">random_url</span>(<span class="hljs-params">url</span>):<br>    items = [<span class="hljs-string">&#x27;1&#x27;</span>, <span class="hljs-string">&#x27;1&#x27;</span>, <span class="hljs-string">&#x27;4&#x27;</span>, <span class="hljs-string">&#x27;5&#x27;</span>, <span class="hljs-string">&#x27;1&#x27;</span>, <span class="hljs-string">&#x27;4&#x27;</span>, <span class="hljs-string">&#x27;1&#x27;</span>, <span class="hljs-string">&#x27;9&#x27;</span>, <span class="hljs-string">&#x27;1&#x27;</span>, <span class="hljs-string">&#x27;9&#x27;</span>, <span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-string">&#x27;b&#x27;</span>, <span class="hljs-string">&#x27;c&#x27;</span>, <span class="hljs-string">&#x27;d&#x27;</span>, <span class="hljs-string">&#x27;e&#x27;</span>, <span class="hljs-string">&#x27;f&#x27;</span>, <span class="hljs-string">&#x27;g&#x27;</span>, <span class="hljs-string">&#x27;h&#x27;</span>, <span class="hljs-string">&#x27;i&#x27;</span>, <span class="hljs-string">&#x27;j&#x27;</span>, <span class="hljs-string">&#x27;k&#x27;</span>,<span class="hljs-string">&#x27;l&#x27;</span>, <span class="hljs-string">&#x27;m&#x27;</span>, <span class="hljs-string">&#x27;n&#x27;</span>, <span class="hljs-string">&#x27;o&#x27;</span>, <span class="hljs-string">&#x27;p&#x27;</span>, <span class="hljs-string">&#x27;q&#x27;</span>, <span class="hljs-string">&#x27;r&#x27;</span>, <span class="hljs-string">&#x27;s&#x27;</span>, <span class="hljs-string">&#x27;t&#x27;</span>, <span class="hljs-string">&#x27;u&#x27;</span>, <span class="hljs-string">&#x27;v&#x27;</span>, <span class="hljs-string">&#x27;w&#x27;</span>, <span class="hljs-string">&#x27;x&#x27;</span>, <span class="hljs-string">&#x27;y&#x27;</span>, <span class="hljs-string">&#x27;z&#x27;</span>]<br>    temp = <span class="hljs-string">&quot;&quot;</span><br>    random_str = temp.join(random.sample(items, <span class="hljs-number">10</span>))<br>    <span class="hljs-keyword">if</span> url.find(<span class="hljs-string">&#x27;?&#x27;</span>) &gt;= <span class="hljs-number">0</span>:<br>        url = url + <span class="hljs-string">&quot;&amp;&quot;</span> + random_str <span class="hljs-comment"># 识别已经是带参数的url</span><br>    <span class="hljs-keyword">else</span>:<br>        url = url + <span class="hljs-string">&quot;?&quot;</span> + random_str<br>    <span class="hljs-keyword">return</span> url<br></code></pre></td></tr></table></figure><p>使用以上的函数，传入一个url变量就可以了。或者直接使用random_url()<br>http头来一个</p><pre><code class="hljs">headers = &#123;    &quot;User-Agent&quot;: &quot;你是一个，一个一个ua&quot;,    &quot;Referer&quot;: &quot;http://114514.com/&quot;,    &quot;Accept&quot;: &quot;*/*&quot;,    &quot;Accept-encoding&quot;: &quot;gzip, deflate&quot;,    &quot;Range&quot;: &quot;bytes=1919-810&quot;,    &quot;Connection&quot;: &quot;tnok&quot;    &#125;</code></pre><p>我们再调用请求模块请求文件：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">while</span> oo:<br><span class="hljs-keyword">try</span>:<br>requests.get(random_url(url),headers = headers)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;攻击成功&quot;</span>)<br><span class="hljs-keyword">except</span>:<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;失败！&quot;</span>)<br></code></pre></td></tr></table></figure><p>关键的代码就不放出来啦，你这么聪明，一定能搞出来的</p><h3 id="实战效果"><a href="#实战效果" class="headerlink" title="实战效果"></a>实战效果</h3><p>博主自己建立了一个薄弱的靶机<br><img src="https://z3.ax1x.com/2021/06/05/2N6dKg.png" alt="靶机"></p><p>然后用国外某CDN打击靶机：<br>经过测试，图片文件183kb大小，100线程直接打满了服务器的100mbps带宽。<br><img src="https://z3.ax1x.com/2021/06/05/2N2iDg.png" alt="图片"></p><p>攻击机只有几kb的流量流出</p><p><img src="https://z3.ax1x.com/2021/06/05/2N29v8.png" alt="攻击机"></p><p>而靶机收到了巨大的流量（其实是它自己发出的）</p><p><img src="https://z3.ax1x.com/2021/06/05/2N2PKS.png" alt="靶机"></p><hr><h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><p>反射放大攻击不同于粗暴的肉鸡堆积流量，”四两拨千斤”的效果使得它具有很大的威力。Range amp更是让目标自己发出流量堵死带宽，不得不说人的想象力是无穷的。</p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Range</tag>
      
      <tag>CDN</tag>
      
      <tag>技术研究</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>manjaro linux下安装向日葵</title>
    <link href="/2021/05/22/7/"/>
    <url>/2021/05/22/7/</url>
    
    <content type="html"><![CDATA[<p>其实在arch系的设备上也是可以安装向日葵的。而且可以很方便的用yay一键安装。<br>命令如下：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">sudo</span> pacman -Syy yay <span class="hljs-comment"># 安装yay</span><br><br>yay -Syy <span class="hljs-comment"># 更新yay</span><br><br>yay -S sunloginclient    <span class="hljs-comment"># 安装向日葵</span><br></code></pre></td></tr></table></figure><p>安装完成后，还要手动启动服务</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">systemctl <span class="hljs-literal">start</span> runsunloginclient.service<br></code></pre></td></tr></table></figure><p>一切正常，应该就可以使用了。<br><a href="https://imgtu.com/i/gLR2mq"><img src="https://z3.ax1x.com/2021/05/22/gLR2mq.md.png" alt="gLR2mq.md.png"></a></p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>manjaro</tag>
      
      <tag>linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
